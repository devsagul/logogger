package utils

import (
	"log"
	"time"
)

type errGoroutine = func() error

func WrapGoroutinePanic(g errGoroutine) errGoroutine {
	return func() (err error) {
		defer func() {
			e := recover()
			if e != nil {
				log.Printf("Panic in goroutine: %s", err.Error())
				err = e
			}
		}()
		err = g()
		return err
	}
}

func RetryForever(g errGoroutine, t time.Duration) func() {
	for err := g(); err != nil;  {
		log.Printf("Error during function envocation: %s, will be retried in %s", err.Error(), t)
		<-time.NewTiemr(t).C
		err = g()
	}
}
